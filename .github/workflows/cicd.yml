name: github actions learning
on:
  push:
    branches:
      - main
      - dev

jobs:
  compile:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        name: checkout
      - name: check java and mvn versions
        run: |
          java -version
          mvn --version
      - name: compile
        run: mvn clean compile
        continue-on-error: true
  security_check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        name: checkout
      - name: trivy installation
        run: |
          sudo apt-get install wget gnupg
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | gpg --dearmor | sudo tee /usr/share/keyrings/trivy.gpg > /dev/null
          echo "deb [signed-by=/usr/share/keyrings/trivy.gpg] https://aquasecurity.github.io/trivy-repo/deb generic main" | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install trivy
      - name: filesystem-scan
        run: trivy fs --format=table -o filescan.json .
      - name: gitleaks installation
        run: sudo apt update && sudo apt install -y gitleaks
      - name: gitleaks scan
        run: | 
          gitleaks detect --source . --report-format=json --report-path=gitleaks.json 
      - name: publish trivy filescan & gitleaks report
        uses: actions/upload-artifact@v4
        with:
          name: security
          path: "*.json"
      - name: gitleaks validation
        run: |
          if jq -e '.Findings | length > 0' gitleaks.json > /dev/null;then
            echo "gitleaks detected sensitive data, please refer to the uploaded gitleaks.json"
            exit 1
          else
            echo "gitleaks found 0 sensitive data, HAPPY WORKING"
          fi
  build:
    runs-on: ubuntu-latest
    needs: compile
    if: github.ref == "refs/heads/main" || github.ref == "refs/heads/dev"
    steps:
      - uses: actions/checkout@v4
        name: checkout
      - name: maven build
        run: mvn clean package
      - name: docker version check
        run: docker --version
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: venkateshreddy679/github-action-boardgame:${GITHUB_RUN_NUMBER}
