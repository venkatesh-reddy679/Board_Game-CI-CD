name: github actions learning
on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths-ignore:
      - 'ECS/**'
      - '.github/workflows/**'
  pull_request:
    branches:
      - main
    paths-ignore:
      - 'ECS/**'
      - '.github/workflows/**'

jobs:
  compile:
    runs-on: ubuntu-latest
    continue-on-error: false
    steps:
      - uses: actions/checkout@v4
        name: checkout
      - uses: actions/setup-java@v4
        with:
         distribution: 'zulu'
         java-version: '17'
      - name: check java and mvn versions
        run: |
          java -version
          mvn --version
      - name: compile
        run: mvn clean compile
        continue-on-error: true
  security_check:
    runs-on: ubuntu-latest
    continue-on-error: false
    steps:
      - uses: actions/checkout@v4
        name: checkout
      - name: trivy installation
        run: |
          sudo apt-get install wget gnupg
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | gpg --dearmor | sudo tee /usr/share/keyrings/trivy.gpg > /dev/null
          echo "deb [signed-by=/usr/share/keyrings/trivy.gpg] https://aquasecurity.github.io/trivy-repo/deb generic main" | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install trivy
      - name: filesystem-scan
        run: trivy fs --format=table -o filescan.json .
      - name: gitleaks installation
        run: sudo apt update && sudo apt install -y gitleaks
      - name: gitleaks scan
        run: | 
          gitleaks detect --source . --report-format=json --report-path=gitleaks.json 
      - name: publish trivy filescan & gitleaks report
        uses: actions/upload-artifact@v4
        with:
          name: security
          path: "*.json"
      - name: gitleaks validation
        run: |
          if jq -e '.Findings | length > 0' gitleaks.json > /dev/null;then
            echo "gitleaks detected sensitive data, please refer to the uploaded gitleaks.json"
            exit 1
          else
            echo "gitleaks found 0 sensitive data, HAPPY WORKING"
          fi
  build:
    runs-on: ubuntu-latest
    needs: compile
    continue-on-error: false
    if: github.ref_name == 'main' || github.ref_name == 'dev'
    steps:
      - uses: actions/checkout@v4
        name: checkout
      - name: maven build
        run: mvn clean package
      - name: docker version check
        run: docker --version
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ vars.DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository }}:${{ github.run_number }}
  deploy:
    needs: ["build","security_check"]
    runs-on: ubuntu-latest
    continue-on-error: false
    environment:
      name: production
    steps:
      - uses: actions/checkout@v4
        name: checkout
      - name: update task-definition.json
        uses: restackio/update-json-file-action@2.1
        with:
          file: ECS/task-definition.json
          fields: |
            {
                "taskRoleArn": "${{ secrets.ecs_role }}",
                "executionRoleArn": "${{ secrets.ecs_role }}",
                "containerDefinitions[0].image": "ghcr.io/${{ github.repository }}:${{ github.run_number }}",
                "containerDefinitions[0].repositoryCredentials.credentialsParameter": "${{ secrets.AWS_GHCR_CREDENTIALS_SECRET }}",
                "containerDefinitions[0].logConfiguration.options.awslogs-group": "${{ vars.logGroupName}}",
                "ontainerDefinitions[0].logConfiguration.options.loggroup-region": "${{ secrets.region }}"
            }
      - name: aws configuration
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-region: ${{ secrets.region }}
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
      - name: register task definition revision
        run: |
         taskDefinition_ARN=$(aws ecs register-task-definition --cli-input-json=file://ECS/task-definition.json --region=${{ secrets.region }} --output=text --query="taskdefinition.taskDefinitionArn")
         echo "taskDefinitionARN=$taskDefinition_ARN" >> $GITHUB_ENV
      - name: update appspec.json
        uses: restackio/update-json-file-action@2.1
        with:
          file: ECS/appspec.json
          fields: |
            {
              "Resources[0].TargetService.Properties.TaskDefinition": "$taskDefinitionARN" 
            }
      - name: create codedeploy revision
        run: |
          deploymentID=$(aws deploy create-deployment --region=${{ secrets.region }} --application-name=${{ secrets.codeDeployName }} --deployment-group-name=${{ secrets.deploymentGroupName }} --revision=file://ECS/appspec.json --output=text --query="deploymentId")
          echo "deployment ID: ${deploymentID}"
          echo "deploymentID=$deploymentID" >> $GITHUB_ENV
      - name: wait for deployment completion
        run: |
          aws deploy wait deployment-successful --deployment-id=${deploymentID} --region=${{ secrets.region }}
      
